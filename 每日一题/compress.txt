class Solution {
    public int compress(char[] chars) {
        int idx= 0;//坐标
        int res = 0;
        int i = 0;
        int j = 1;

        while(i < chars.length && idx < chars.length) {
            while(j < chars.length && chars[i] == chars[j]) {//快指针，寻找下一个与i不等的字符
                j++;
            }
            chars[idx++] = chars[i];//先把当前字符写入
            //若此字符大于1，则写数字
            if(j - i > 1  && idx < chars.length) {
                int v = j - i;
                int mod = v % 10;
                while(v >= 10) {
                    v /= 10;
                    chars[idx++] = (char) (v + '0');
                } 
                if(v > 0) chars[idx++] = (char) (mod + '0');
            }
            i = j;//将i指向下一个字符
            j++;//j指向新字符的下一个
        }
        return idx;
    }
}