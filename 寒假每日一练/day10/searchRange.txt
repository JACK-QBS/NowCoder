class Solution {
    public int[] searchRange(int[] nums, int target) {
        int low = start(nums,target);//开始
        int up = end(nums,target);//结束
        //不存在
        if (up < low) {
            return new int[]{-1,-1};
        }
        return new int[]{low,up};
    }

    //计算开始位置：
    public int start(int[] nums, int target) {
        int left = 0;
        int right = nums.length - 1;
        while (left <= right) {
            int mid = left + ((right - left) >> 1);
            if (target <= nums[mid]) {
                right = mid - 1;
            } else if (target > nums[mid]){
                left = mid + 1;
            }
        }
        return left;
    }

    //计算结束位置：
    public int end(int[] nums, int target) {
        int left = 0;
        int right = nums.length - 1;
        while (left <= right) {
            int mid = left + ((right - left) >> 1);
            if (target >= nums[mid]) {
                left = mid + 1;
            } else if (target < nums[mid]){
                right = mid - 1;
            }
        }
        return right;
    }
}